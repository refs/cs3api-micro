// Copyright 2018-2019 CERN
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// In applying this license, CERN does not waive the privileges and immunities
// granted to it by virtue of its status as an Intergovernmental Organization
// or submit itself to any jurisdiction.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.8.0
// source: cs3/ocm/core/v1beta1/ocm_core_api.proto

package corev1beta1

import (
	context "context"
	v1beta11 "github.com/cs3org/go-cs3apis/build/go-cs3apis/cs3/identity/user/v1beta1"
	v1beta12 "github.com/cs3org/go-cs3apis/build/go-cs3apis/cs3/rpc/v1beta1"
	v1beta1 "github.com/cs3org/go-cs3apis/build/go-cs3apis/cs3/types/v1beta1"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// https://rawgit.com/GEANT/OCM-API/v1/docs.html#null%2Fpaths%2F~1shares%2Fpost
type CreateOCMCoreShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// OPTIONAL.
	// Description for the share.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// REQUIRED.
	// Name of the resource (file or folder).
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// REQUIRED.
	// Identifier to identify the resource at the provider side. This is unique per provider.
	ProviderId string `protobuf:"bytes,4,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	// REQUIRED.
	// Provider specific identifier of the user that wants to share the resource.
	Owner *v1beta11.UserId `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	// REQUIRED.
	// Consumer specific identifier of the user or group the provider wants to share the resource with.
	// This is known in advance, for example using the OCM invitation flow.
	// Please note that the consumer service endpoint is known in advance as well, so this is no part of the request body.
	// TODO: this field needs to represent either a user or group in the future, not only a user.
	ShareWith *v1beta11.UserId `protobuf:"bytes,6,opt,name=share_with,json=shareWith,proto3" json:"share_with,omitempty"`
	// REQUIRED.
	// The protocol which is used to establish synchronisation.
	Protocol *Protocol `protobuf:"bytes,7,opt,name=protocol,proto3" json:"protocol,omitempty"`
}

func (x *CreateOCMCoreShareRequest) Reset() {
	*x = CreateOCMCoreShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_ocm_core_v1beta1_ocm_core_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOCMCoreShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOCMCoreShareRequest) ProtoMessage() {}

func (x *CreateOCMCoreShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_ocm_core_v1beta1_ocm_core_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOCMCoreShareRequest.ProtoReflect.Descriptor instead.
func (*CreateOCMCoreShareRequest) Descriptor() ([]byte, []int) {
	return file_cs3_ocm_core_v1beta1_ocm_core_api_proto_rawDescGZIP(), []int{0}
}

func (x *CreateOCMCoreShareRequest) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *CreateOCMCoreShareRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateOCMCoreShareRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateOCMCoreShareRequest) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *CreateOCMCoreShareRequest) GetOwner() *v1beta11.UserId {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *CreateOCMCoreShareRequest) GetShareWith() *v1beta11.UserId {
	if x != nil {
		return x.ShareWith
	}
	return nil
}

func (x *CreateOCMCoreShareRequest) GetProtocol() *Protocol {
	if x != nil {
		return x.Protocol
	}
	return nil
}

type CreateOCMCoreShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED.
	// The response status.
	Status *v1beta12.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// Unique ID to identify the share at the consumer side.
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// REQUIRED.
	Created *v1beta1.Timestamp `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *CreateOCMCoreShareResponse) Reset() {
	*x = CreateOCMCoreShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs3_ocm_core_v1beta1_ocm_core_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOCMCoreShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOCMCoreShareResponse) ProtoMessage() {}

func (x *CreateOCMCoreShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cs3_ocm_core_v1beta1_ocm_core_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOCMCoreShareResponse.ProtoReflect.Descriptor instead.
func (*CreateOCMCoreShareResponse) Descriptor() ([]byte, []int) {
	return file_cs3_ocm_core_v1beta1_ocm_core_api_proto_rawDescGZIP(), []int{1}
}

func (x *CreateOCMCoreShareResponse) GetStatus() *v1beta12.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CreateOCMCoreShareResponse) GetOpaque() *v1beta1.Opaque {
	if x != nil {
		return x.Opaque
	}
	return nil
}

func (x *CreateOCMCoreShareResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateOCMCoreShareResponse) GetCreated() *v1beta1.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

var File_cs3_ocm_core_v1beta1_ocm_core_api_proto protoreflect.FileDescriptor

var file_cs3_ocm_core_v1beta1_ocm_core_api_proto_rawDesc = []byte{
	0x0a, 0x27, 0x63, 0x73, 0x33, 0x2f, 0x6f, 0x63, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x6f, 0x63, 0x6d, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x63, 0x73, 0x33, 0x2e, 0x6f,
	0x63, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a,
	0x29, 0x63, 0x73, 0x33, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x63, 0x73, 0x33, 0x2f,
	0x6f, 0x63, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x63, 0x73, 0x33, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d,
	0x63, 0x73, 0x33, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x02,
	0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x43, 0x4d, 0x43, 0x6f, 0x72, 0x65, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x6f,
	0x70, 0x61, 0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73,
	0x33, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x40,
	0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x12, 0x3a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0xc8, 0x01, 0x0a,
	0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x43, 0x4d, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x73,
	0x33, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x06,
	0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x36, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x32, 0x85, 0x01, 0x0a, 0x0a, 0x4f, 0x63, 0x6d, 0x43,
	0x6f, 0x72, 0x65, 0x41, 0x50, 0x49, 0x12, 0x77, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x43, 0x4d, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x2f, 0x2e, 0x63,
	0x73, 0x33, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x43, 0x4d, 0x43, 0x6f, 0x72,
	0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x63, 0x73, 0x33, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x43, 0x4d, 0x43, 0x6f,
	0x72, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x6e, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x73, 0x33, 0x2e, 0x6f, 0x63, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x42, 0x0f, 0x4f, 0x63, 0x6d,
	0x43, 0x6f, 0x72, 0x65, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x0b,
	0x63, 0x6f, 0x72, 0x65, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x4f,
	0x43, 0xaa, 0x02, 0x14, 0x43, 0x73, 0x33, 0x2e, 0x4f, 0x63, 0x6d, 0x2e, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x56, 0x31, 0x42, 0x65, 0x74, 0x61, 0x31, 0xca, 0x02, 0x14, 0x43, 0x73, 0x33, 0x5c, 0x4f,
	0x63, 0x6d, 0x5c, 0x43, 0x6f, 0x72, 0x65, 0x5c, 0x56, 0x31, 0x42, 0x65, 0x74, 0x61, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cs3_ocm_core_v1beta1_ocm_core_api_proto_rawDescOnce sync.Once
	file_cs3_ocm_core_v1beta1_ocm_core_api_proto_rawDescData = file_cs3_ocm_core_v1beta1_ocm_core_api_proto_rawDesc
)

func file_cs3_ocm_core_v1beta1_ocm_core_api_proto_rawDescGZIP() []byte {
	file_cs3_ocm_core_v1beta1_ocm_core_api_proto_rawDescOnce.Do(func() {
		file_cs3_ocm_core_v1beta1_ocm_core_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_cs3_ocm_core_v1beta1_ocm_core_api_proto_rawDescData)
	})
	return file_cs3_ocm_core_v1beta1_ocm_core_api_proto_rawDescData
}

var file_cs3_ocm_core_v1beta1_ocm_core_api_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_cs3_ocm_core_v1beta1_ocm_core_api_proto_goTypes = []interface{}{
	(*CreateOCMCoreShareRequest)(nil),  // 0: cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest
	(*CreateOCMCoreShareResponse)(nil), // 1: cs3.ocm.core.v1beta1.CreateOCMCoreShareResponse
	(*v1beta1.Opaque)(nil),             // 2: cs3.types.v1beta1.Opaque
	(*v1beta11.UserId)(nil),            // 3: cs3.identity.user.v1beta1.UserId
	(*Protocol)(nil),                   // 4: cs3.ocm.core.v1beta1.Protocol
	(*v1beta12.Status)(nil),            // 5: cs3.rpc.v1beta1.Status
	(*v1beta1.Timestamp)(nil),          // 6: cs3.types.v1beta1.Timestamp
}
var file_cs3_ocm_core_v1beta1_ocm_core_api_proto_depIdxs = []int32{
	2, // 0: cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.opaque:type_name -> cs3.types.v1beta1.Opaque
	3, // 1: cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.owner:type_name -> cs3.identity.user.v1beta1.UserId
	3, // 2: cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.share_with:type_name -> cs3.identity.user.v1beta1.UserId
	4, // 3: cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest.protocol:type_name -> cs3.ocm.core.v1beta1.Protocol
	5, // 4: cs3.ocm.core.v1beta1.CreateOCMCoreShareResponse.status:type_name -> cs3.rpc.v1beta1.Status
	2, // 5: cs3.ocm.core.v1beta1.CreateOCMCoreShareResponse.opaque:type_name -> cs3.types.v1beta1.Opaque
	6, // 6: cs3.ocm.core.v1beta1.CreateOCMCoreShareResponse.created:type_name -> cs3.types.v1beta1.Timestamp
	0, // 7: cs3.ocm.core.v1beta1.OcmCoreAPI.CreateOCMCoreShare:input_type -> cs3.ocm.core.v1beta1.CreateOCMCoreShareRequest
	1, // 8: cs3.ocm.core.v1beta1.OcmCoreAPI.CreateOCMCoreShare:output_type -> cs3.ocm.core.v1beta1.CreateOCMCoreShareResponse
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_cs3_ocm_core_v1beta1_ocm_core_api_proto_init() }
func file_cs3_ocm_core_v1beta1_ocm_core_api_proto_init() {
	if File_cs3_ocm_core_v1beta1_ocm_core_api_proto != nil {
		return
	}
	file_cs3_ocm_core_v1beta1_resources_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cs3_ocm_core_v1beta1_ocm_core_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOCMCoreShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs3_ocm_core_v1beta1_ocm_core_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOCMCoreShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cs3_ocm_core_v1beta1_ocm_core_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cs3_ocm_core_v1beta1_ocm_core_api_proto_goTypes,
		DependencyIndexes: file_cs3_ocm_core_v1beta1_ocm_core_api_proto_depIdxs,
		MessageInfos:      file_cs3_ocm_core_v1beta1_ocm_core_api_proto_msgTypes,
	}.Build()
	File_cs3_ocm_core_v1beta1_ocm_core_api_proto = out.File
	file_cs3_ocm_core_v1beta1_ocm_core_api_proto_rawDesc = nil
	file_cs3_ocm_core_v1beta1_ocm_core_api_proto_goTypes = nil
	file_cs3_ocm_core_v1beta1_ocm_core_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OcmCoreAPIClient is the client API for OcmCoreAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OcmCoreAPIClient interface {
	// Creates a new ocm share.
	CreateOCMCoreShare(ctx context.Context, in *CreateOCMCoreShareRequest, opts ...grpc.CallOption) (*CreateOCMCoreShareResponse, error)
}

type ocmCoreAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewOcmCoreAPIClient(cc grpc.ClientConnInterface) OcmCoreAPIClient {
	return &ocmCoreAPIClient{cc}
}

func (c *ocmCoreAPIClient) CreateOCMCoreShare(ctx context.Context, in *CreateOCMCoreShareRequest, opts ...grpc.CallOption) (*CreateOCMCoreShareResponse, error) {
	out := new(CreateOCMCoreShareResponse)
	err := c.cc.Invoke(ctx, "/cs3.ocm.core.v1beta1.OcmCoreAPI/CreateOCMCoreShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OcmCoreAPIServer is the server API for OcmCoreAPI service.
type OcmCoreAPIServer interface {
	// Creates a new ocm share.
	CreateOCMCoreShare(context.Context, *CreateOCMCoreShareRequest) (*CreateOCMCoreShareResponse, error)
}

// UnimplementedOcmCoreAPIServer can be embedded to have forward compatible implementations.
type UnimplementedOcmCoreAPIServer struct {
}

func (*UnimplementedOcmCoreAPIServer) CreateOCMCoreShare(context.Context, *CreateOCMCoreShareRequest) (*CreateOCMCoreShareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOCMCoreShare not implemented")
}

func RegisterOcmCoreAPIServer(s *grpc.Server, srv OcmCoreAPIServer) {
	s.RegisterService(&_OcmCoreAPI_serviceDesc, srv)
}

func _OcmCoreAPI_CreateOCMCoreShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOCMCoreShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcmCoreAPIServer).CreateOCMCoreShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.ocm.core.v1beta1.OcmCoreAPI/CreateOCMCoreShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcmCoreAPIServer).CreateOCMCoreShare(ctx, req.(*CreateOCMCoreShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OcmCoreAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cs3.ocm.core.v1beta1.OcmCoreAPI",
	HandlerType: (*OcmCoreAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOCMCoreShare",
			Handler:    _OcmCoreAPI_CreateOCMCoreShare_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cs3/ocm/core/v1beta1/ocm_core_api.proto",
}
